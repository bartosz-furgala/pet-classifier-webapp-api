# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - pet-classifier-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      # UWAGA: USUWAMY KROK Z ZIPOWANIEM!
      # - name: Zip artifact for deployment
      #   run: zip release.zip ./* -r

      # Zamiast zipa, przekażemy cały katalog jako artefakt
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app # Nazwa artefaktu
          path: .           # UPLOADUJEMY CAŁY BIEŻĄCY KATALOG (czyli Twoje repo)
          # Zapewniamy, że venv jest wykluczone z artefaktu, aby nie zajmowało miejsca
          # Jeśli masz inne duże katalogi, które nie są potrzebne na serwerze (np. .git), też możesz je wykluczyć
          retention-days: 1 # Opcjonalnie: ile dni przechowywać artefakt
          if-no-files-found: error # Ważne: rzuć błąd, jeśli nie znajdzie plików

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: . # POBIERAMY ARTEFAKT DO BIEŻĄCEGO KATALOGU

      # UWAGA: USUWAMY KROK Z ROZPAKOWYWANIEM!
      # - name: Unzip artifact for deployment
      #   run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_51A556A8C5B1484FAD3D931DE47D5B9F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_526B1B591DCD4EC38F57EE13ACE7280E }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_860501F0D46041E6A27CE987A2A2C6C5 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'pet-classifier-app'
          slot-name: 'Production'
          # DODAJEMY PARAMETR 'package' WSKAZUJĄCY NA BIEŻĄCY KATALOG!
          package: . # To jest kluczowa zmiana! Wdrażamy zawartość bieżącego katalogu.
